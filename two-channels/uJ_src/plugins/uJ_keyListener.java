import ij.*;
import ij.plugin.*;
import ij.gui.*;
import java.awt.event.*;
import ij.process.*;

/**
    This plugin implements the KeyListener interface and listens
    for key events generated by the current image.
*/
public class uJ_keyListener implements PlugIn, KeyListener, ImageListener {
    ImageWindow win;
    ImageCanvas canvas;
    		

    public void run(String arg) {
        ImagePlus img = IJ.getImage();
        win = img.getWindow();
        canvas = win.getCanvas();
        win.removeKeyListener(IJ.getInstance());
        canvas.removeKeyListener(IJ.getInstance());
        win.addKeyListener(this);
        canvas.addKeyListener(this);
        ImagePlus.addImageListener(this);
        IJ.log("addKeyListener");
    }
    
    public void keyPressed(KeyEvent e) {
        ImagePlus imp = IJ.getImage();       
		ImageProcessor ip = imp.getProcessor();  
	
        int keyCode = e.getKeyCode();
        char keyChar = e.getKeyChar();
        int flags = e.getModifiers();
        
        //IJ.log("> keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	
		if(keyCode==39){ //NEXT
			IJ.log("* keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	Roi roi = new Roi(0, 1, 1, 1); // x, y, width, height of the rectangle  
			ip.setRoi(roi);  
			ip.setValue(255);  
			ip.fill();  
			imp.updateAndDraw();
		}
		
		if(keyCode==37){ //PREV
       		//IJ.log("> keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	Roi roi = new Roi(1, 0, 1, 1); // x, y, width, height of the rectangle  
			ip.setRoi(roi);  
			ip.setValue(255);  
			ip.fill();  
			imp.updateAndDraw();
		}
		
		if(keyCode==83){ //SAVE
			//IJ.log("> keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	Roi roi = new Roi(1, 1, 1, 1); // x, y, width, height of the rectangle  
			ip.setRoi(roi);  
			ip.setValue(255);  
			ip.fill();  
			imp.updateAndDraw();
		}
		
		if(keyCode==81){ //QUIT
			//IJ.log("> keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	Roi roi = new Roi(0, 0, 1, 1); // x, y, width, height of the rectangle  
			ip.setRoi(roi);  
			ip.setValue(255);  
			ip.fill();  
			imp.updateAndDraw();
		}
		
        if(keyCode==32 || keyCode==16  || keyCode==40 || keyCode==38 ){ //Shift or Space or Up or Down
        	//IJ.log("> keyPressed: keyCode=" + keyCode + " (" + KeyEvent.getKeyText(keyCode) + ")");
        	IJ.getInstance().keyPressed(e); // hand off event to ImageJ
        }
    }

    public void imageClosed(ImagePlus imp) {
        if (win!=null)
            win.removeKeyListener(this);
        if (canvas!=null)
            canvas.removeKeyListener(this);
        ImagePlus.removeImageListener(this);
        IJ.log("removeKeyListener");
    }

    public void keyReleased(KeyEvent e) {}
    public void keyTyped(KeyEvent e) {}
    public void imageOpened(ImagePlus imp) {}
    public void imageUpdated(ImagePlus imp) {}

}

